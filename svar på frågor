Uppgift 3: Ansvarsområden
Analysera era klasser med avseende på Separation of Concern (SoC) och Single Responsibility Principle (SRP).
Vilka ansvarsområden har era klasser?
Vilka anledningar har de att förändras?
På vilka klasser skulle ni behöva tillämpa dekomposition för att bättre följa SoC och SRP?

Svar:

CarController
Har ansvar för att styra bilen, uppdatera och interagera med DrawPanel och CarView
Den har anledning att förändras om vi vill ändra uppdateringsmekanismen eller
ändra på hur bilen styrs.
Kan dekomponeras genom att skapa en klass som hanterar uppdatering och en klass som hanterar styrning.

CarView
Har koll på UI och delegerar händelser till CarControlelr
Den har anledning att förändras om vi vill ändra på hur UI ser ut eller dess komponenter
Kan dekomponeras genom att skapa en klass som hanterar UI och en klass som hanterar händelser.

DrawPanel
Har ansvar för att rita bilen
Den har anledning att förändras om vi vill ändra på hur bilen ritas
Kan dekomponeras genom att skapa en klass som hanterar ritning för ett visst objekt
och en klass som hanterar ritning av ett annat objekt separat.